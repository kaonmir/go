openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: Local server
    url: http://localhost:4000
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/kaonmir/GoAPI/1.0.0
info:
  description: Go API
  version: "1.0.0"
  title: Go API
  contact:
    email: sonjeff@naver.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: authentication
    description: authentication

paths:
  /auth/jwt:
    get:
      tags:
        - authentication
      summary: check if loged in or not
      parameters:
        - $ref: "#/components/parameters/JWTAuthentication"
      responses:
        "200":
          description: Requester is already logged in
          $ref: "#/components/responses/200JWTAuthentication"
        "400":
          $ref: "#/components/responses/400NoAuthentication"
    post:
      tags:
        - authentication
      summary: get JWT using username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          $ref: "#/components/responses/200JWTAuthentication"
        "400":
          $ref: "#/components/responses/400NoAuthentication"

components:
  parameters:
    JWTAuthentication:
      description: JWT Authentication
      in: header
      name: X-Access-Token
      schema:
        type: string
        format: jwt
      required: true
  responses:
    200JWTAuthentication:
      description: return JWT value
      content:
        application/json:
          schema:
            properties:
              jwt:
                type: string
                description: User's JWT value
    400NoAuthentication:
      description: 400 User sent wrong parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    404NotFound:
      description: The specified resource was not found.

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
